{"version":3,"sources":["Homepage.js","HighScore.js","questions.js","Quiz.js","imgpage.js","App.js","serviceWorker.js","index.js"],"names":["createMedia","breakpoints","mobile","tablet","computer","MediaContextProvider","Media","HomepageHeading","Container","text","Header","as","content","inverted","style","fontSize","fontWeight","marginBottom","marginTop","Button","primary","size","Icon","name","DesktopContainer","state","hideFixedMenu","setState","fixed","showFixedMenu","children","this","props","greaterThan","Visibility","once","onBottomPassed","onBottomPassedReverse","Segment","textAlign","minHeight","padding","vertical","Menu","pointing","secondary","Item","onClick","history","push","position","marginLeft","Component","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","Sidebar","Pushable","at","animation","onHide","visible","active","Pusher","dimmed","ResponsiveContainer","HomepageLayout","Grid","container","stackable","verticalAlign","Row","Column","width","floated","Image","bordered","rounded","src","celled","columns","paddingBottom","paddingTop","avatar","Divider","className","horizontal","margin","textTransform","href","divided","List","link","HighScore","isLoading","scores","submitNewScore","urlParams","URLSearchParams","window","location","search","get","prompt","axios","post","score","Number","time","then","data","map","key","_id","React","question","choices","answer","App","currentQuestionIndex","answeredQuestionCount","handleClick","event","chosenAnswer","target","value","correctAnswerIndex","questions","length","timer","setInterval","clearInterval","currentQuestion","Message","header","choice","FixedMenuLayout","marginRight","Dropdown","item","simple","section","centered","exact","path","component","ImgPage","Homepage","Quiz","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c3a92734.chunk.js","sourcesContent":["import { createMedia } from '@artsy/fresnel'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react';\nimport {\n    Button,\n    Container,\n    Divider,\n    Grid,\n    Header,\n    Icon,\n    Image,\n    List,\n    Menu,\n    Segment,\n    Sidebar,\n    Visibility,\n  } from 'semantic-ui-react'\n\n  const { MediaContextProvider, Media } = createMedia({\n    breakpoints: {\n      mobile: 0,\n      tablet: 768,\n      computer: 1024,\n    },\n  })\n  \n  /* Heads up!\n   * HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled\n   * components for such things.\n   */\n  const HomepageHeading = ({ mobile }) => (\n    <Container text>\n      <Header\n        as='h1'\n        content='Imagine-a-Company'\n        inverted\n        style={{\n          fontSize: mobile ? '2em' : '4em',\n          fontWeight: 'normal',\n          marginBottom: 0,\n          marginTop: mobile ? '1.5em' : '3em',\n        }}\n      />\n      <Header\n        as='h2'\n        content='Do whatever you want when you want to.'\n        inverted\n        style={{\n          fontSize: mobile ? '1.5em' : '1.7em',\n          fontWeight: 'normal',\n          marginTop: mobile ? '0.5em' : '1.5em',\n        }}\n      />\n      <Button primary size='huge'>\n        Get Started\n        <Icon name='right arrow' />\n      </Button>\n    </Container>\n  )\n  \n  HomepageHeading.propTypes = {\n    mobile: PropTypes.bool,\n  }\n  \n  /* Heads up!\n   * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\n   * It can be more complicated, but you can create really flexible markup.\n   */\n  class DesktopContainer extends Component {\n    state = {}\n  \n    hideFixedMenu = () => this.setState({ fixed: false })\n    showFixedMenu = () => this.setState({ fixed: true })\n  \n    render() {\n      const { children } = this.props\n      const { fixed } = this.state\n  \n      return (\n        <Media greaterThan='mobile'>\n          <Visibility\n            once={false}\n            onBottomPassed={this.showFixedMenu}\n            onBottomPassedReverse={this.hideFixedMenu}\n          >\n            <Segment\n              inverted\n              textAlign='center'\n              style={{ minHeight: 700, padding: '1em 0em' }}\n              vertical\n            >\n              <Menu\n                fixed={fixed ? 'top' : null}\n                inverted={!fixed}\n                pointing={!fixed}\n                secondary={!fixed}\n                size='large'\n              >\n                <Container>\n                <Menu.Item\n                    name='Home Page'\n                    onClick={() => {\n                        this.props.history.push('/homepage');\n                    }}\n                    >\n            Home\n                </Menu.Item>\n                  <Menu.Item as='a'>Work</Menu.Item>\n                  <Menu.Item as='a'>Company</Menu.Item>\n                  <Menu.Item\n                    name='Random Images'\n                    onClick={() => {\n                        this.props.history.push('/images');\n                    }}\n                    >\n            Random Images\n                </Menu.Item>\n                  <Menu.Item\n                    name='geoQuiz'\n                    onClick={() => {\n                        this.props.history.push('/quiz');\n                    }}\n                    >\n            Geography Quiz\n                </Menu.Item>\n                  <Menu.Item position='right'>\n                    <Button as='a' inverted={!fixed}>\n                      Log in\n                    </Button>\n                    <Button as='a' inverted={!fixed} primary={fixed} style={{ marginLeft: '0.5em' }}>\n                      Sign Up\n                    </Button>\n                  </Menu.Item>\n                </Container>\n              </Menu>\n              <HomepageHeading />\n            </Segment>\n          </Visibility>\n  \n          {children}\n        </Media>\n      )\n    }\n  }\n  \n  DesktopContainer.propTypes = {\n    children: PropTypes.node,\n  }\n  \n  class MobileContainer extends Component {\n    state = {}\n  \n    handleSidebarHide = () => this.setState({ sidebarOpened: false })\n  \n    handleToggle = () => this.setState({ sidebarOpened: true })\n  \n    render() {\n      const { children } = this.props\n      const { sidebarOpened } = this.state\n  \n      return (\n        <Media as={Sidebar.Pushable} at='mobile'>\n          <Sidebar.Pushable>\n            <Sidebar\n              as={Menu}\n              animation='overlay'\n              inverted\n              onHide={this.handleSidebarHide}\n              vertical\n              visible={sidebarOpened}\n            >\n              <Menu.Item as='a' active>\n                Home\n              </Menu.Item>\n              <Menu.Item as='a'>Work</Menu.Item>\n              <Menu.Item as='a'>Company</Menu.Item>\n              <Menu.Item as='a'>Careers</Menu.Item>\n              <Menu.Item as='a'>Log in</Menu.Item>\n              <Menu.Item as='a'>Sign Up</Menu.Item>\n              <Menu.Item\n                    name='geoQuiz'\n                    onClick={() => {\n                        this.props.history.push('/quiz');\n                    }}\n                    >\n            Geography Quiz\n                </Menu.Item>\n            </Sidebar>\n  \n            <Sidebar.Pusher dimmed={sidebarOpened}>\n              <Segment\n                inverted\n                textAlign='center'\n                style={{ minHeight: 350, padding: '1em 0em' }}\n                vertical\n              >\n                <Container>\n                  <Menu inverted pointing secondary size='large'>\n                    <Menu.Item onClick={this.handleToggle}>\n                      <Icon name='sidebar' />\n                    </Menu.Item>\n                    <Menu.Item position='right'>\n                      <Button as='a' inverted>\n                        Log in\n                      </Button>\n                      <Button as='a' inverted style={{ marginLeft: '0.5em' }}>\n                        Sign Up\n                      </Button>\n                    </Menu.Item>\n                  </Menu>\n                </Container>\n                <HomepageHeading mobile />\n              </Segment>\n  \n              {children}\n            </Sidebar.Pusher>\n          </Sidebar.Pushable>\n        </Media>\n      )\n    }\n  }\n  \n  MobileContainer.propTypes = {\n    children: PropTypes.node,\n  }\n  \n  const ResponsiveContainer = ({ children, history }) => (\n    /* Heads up!\n     * For large applications it may not be best option to put all page into these containers at\n     * they will be rendered twice for SSR.\n     */\n    <MediaContextProvider>\n      <DesktopContainer history={history}>{children}</DesktopContainer>\n      <MobileContainer history={history}>{children}</MobileContainer>\n    </MediaContextProvider>\n  )\n  \n  ResponsiveContainer.propTypes = {\n    children: PropTypes.node,\n  }\n  \n  const HomepageLayout = ({ history }) => (\n    <ResponsiveContainer history={history}>\n      <Segment style={{ padding: '8em 0em' }} vertical>\n        <Grid container stackable verticalAlign='middle'>\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <Header as='h3' style={{ fontSize: '2em' }}>\n                We Help Companies and Companions\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>\n                We can give your company superpowers to do things that they never thought possible.\n                Let us delight your customers and empower your needs... through pure data analytics.\n              </p>\n              <Header as='h3' style={{ fontSize: '2em' }}>\n                We Make Bananas That Can Dance\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>\n                Yes that's right, you thought it was the stuff of dreams, but even bananas can be\n                bioengineered.\n              </p>\n            </Grid.Column>\n            <Grid.Column floated='right' width={6}>\n              <Image bordered rounded size='large' src='/images/wireframe/white-image.png' />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column textAlign='center'>\n              <Button size='huge'>Check Them Out</Button>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n  \n      <Segment style={{ padding: '0em' }} vertical>\n        <Grid celled='internally' columns='equal' stackable>\n          <Grid.Row textAlign='center'>\n            <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n              <Header as='h3' style={{ fontSize: '2em' }}>\n                \"What a Company\"\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>That is what they all say about us</p>\n            </Grid.Column>\n            <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n              <Header as='h3' style={{ fontSize: '2em' }}>\n                \"I shouldn't have gone with their competitor.\"\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>\n                <Image avatar src='/images/avatar/large/nan.jpg' />\n                <b>Nan</b> Chief Fun Officer Acme Toys\n              </p>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n  \n      <Segment style={{ padding: '8em 0em' }} vertical>\n        <Container text>\n          <Header as='h3' style={{ fontSize: '2em' }}>\n            Breaking The Grid, Grabs Your Attention\n          </Header>\n          <p style={{ fontSize: '1.33em' }}>\n            Instead of focusing on content creation and hard work, we have learned how to master the\n            art of doing nothing by providing massive amounts of whitespace and generic content that\n            can seem massive, monolithic and worth your attention.\n          </p>\n          <Button as='a' size='large'>\n            Read More\n          </Button>\n  \n          <Divider\n            as='h4'\n            className='header'\n            horizontal\n            style={{ margin: '3em 0em', textTransform: 'uppercase' }}\n          >\n            <a href='#'>Case Studies</a>\n          </Divider>\n  \n          <Header as='h3' style={{ fontSize: '2em' }}>\n            Did We Tell You About Our Bananas?\n          </Header>\n          <p style={{ fontSize: '1.33em' }}>\n            Yes I know you probably disregarded the earlier boasts as non-sequitur filler content, but\n            it's really true. It took years of gene splicing and combinatory DNA research, but our\n            bananas can really dance.\n          </p>\n          <Button as='a' size='large'>\n            I'm Still Quite Interested\n          </Button>\n        </Container>\n      </Segment>\n  \n      <Segment inverted vertical style={{ padding: '5em 0em' }}>\n        <Container>\n          <Grid divided inverted stackable>\n            <Grid.Row>\n              <Grid.Column width={3}>\n                <Header inverted as='h4' content='About' />\n                <List link inverted>\n                  <List.Item as='a'>Sitemap</List.Item>\n                  <List.Item as='a'>Contact Us</List.Item>\n                  <List.Item as='a'>Religious Ceremonies</List.Item>\n                  <List.Item as='a'>Gazebo Plans</List.Item>\n                </List>\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <Header inverted as='h4' content='Services' />\n                <List link inverted>\n                  <List.Item as='a'>Banana Pre-Order</List.Item>\n                  <List.Item as='a'>DNA FAQ</List.Item>\n                  <List.Item as='a'>How To Access</List.Item>\n                  <List.Item as='a'>Favorite X-Men</List.Item>\n                </List>\n              </Grid.Column>\n              <Grid.Column width={7}>\n                <Header as='h4' inverted>\n                  Footer Header\n                </Header>\n                <p>\n                  Extra space for a call to action inside the footer that could help re-engage users.\n                </p>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </Segment>\n    </ResponsiveContainer>\n  )\n  \n  export default HomepageLayout\n\n\n","import React from 'react';\nimport axios from 'axios';\n\nclass HighScore extends React.Component {\n    state = {\n        isLoading: true,\n        scores: []\n    }\n\n    componentDidMount() {\n        axios.get('/api/scores')\n            .then(scores => {\n                this.setState({\n                    isLoading: false,\n                    scores: scores.data\n                })\n            })\n    }\n\n    componentDidUpdate() {\n        if (!this.state.isLoading) {\n            this.submitNewScore();\n        }\n    }\n\n    submitNewScore = () => {\n        const urlParams = new URLSearchParams(window.location.search);\n\n        if(urlParams.get('score') && urlParams.get('time')) {\n            const name = prompt('Enter your name');\n\n            axios.post('/api/scores', {\n                name,\n                score: Number(urlParams.get('score')),\n                time: Number(urlParams.get('time'))\n            })\n                .then(() => {\n                    window.location.href = '/';\n                });\n        }\n    }\n\n    render() {\n        if (this.state.isLoading) {\n            return <img src=\"https://i.pinimg.com/originals/f6/65/6a/f6656aa6fdb6b8f905dea0bcc2d71dd8.gif\" />\n        }\n\n        return (\n            <>\n            {this.state.scores.map(score => (\n                <div key={score._id}>\n                    <p>Name: {score.name}</p>\n                    <p>Score: {score.score}</p>\n                </div>\n            ))}\n            </>\n        );\n\n    }\n}\n\nexport default HighScore;\n","export default [\n    {\n        question: 'What is the capitol of California',\n        choices: ['Sacremento', 'Austin', 'Seattle', 'Washington DC'],\n        answer: 0\n    },\n    {\n        question: 'What is the capitol of the USA',\n        choices: ['Sacremento', 'Austin', 'Seattle', 'Washington DC'],\n        answer: 3\n    },\n    {\n        question: 'In which ocean is the island nation of Mauritius?',\n        choices: ['Pacific', 'Atlantic', 'Artic', 'Indian'],\n        answer: 3\n    },\n    {\n        question: 'On what continent is Saudi Arabia located?',\n        choices: ['Africa', 'Asia', 'North America', 'Europe'],\n        answer: 2\n    },\n    {\n        question: 'Which state in the USA is a cluster of islands?',\n        choices: ['Alaska', 'Hawaii', 'Guam', 'Midway'],\n        answer: 1\n    },\n    {\n        question: 'What is the capitol of Sweden?',\n        choices: ['Sacremento', 'Austin', 'Stockholm', 'Gothenburg'],\n        answer: 0\n    },\n    {\n        question: 'What is the capitol of Spain?',\n        choices: ['Berlin', 'Madrid', 'Barcelona', 'Nice'],\n        answer: 1\n    },\n    {\n        question: 'What is the capitol of Norway',\n        choices: ['Stockholm', 'Madrid', 'Seattle', 'Oslo'],\n        answer: 3\n    },\n    {\n        question: 'What is the capitol of New York',\n        choices: ['NYC', 'Albany', 'Rockfeld', 'Richmond'],\n        answer: 1\n    }\n    // {\n    //     question: 'What is used to style webpages',\n    //     choices: ['Python', 'CSS', 'HTML', 'Javascript'],\n    //     answer: 1\n    // }\n\n];\n","import React from 'react';\nimport { Container, Grid, Message, Button } from 'semantic-ui-react';\nimport HighScores from './HighScore';\nimport questions from './questions';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    currentQuestionIndex: 0,\n    answeredQuestionCount: 0,\n    score: 0,\n    time: 90\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState({\n        time: this.state.time - 1,\n      })\n    }, 1000);\n  }\n\n  componentDidUpdate() {\n    if (questions.length === this.state.answeredQuestionCount || this.state.time === 0) {\n      // end the quiz\n      this.props.history.push('/highscores?score=' + this.state.score + '&time=' + this.state.time);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  handleClick = event => {\n    const chosenAnswer = event.target.value;\n    const correctAnswerIndex = questions[this.state.currentQuestionIndex].answer;\n\n    // if answer is correct\n    if (chosenAnswer === questions[this.state.currentQuestionIndex].choices[correctAnswerIndex]) {\n      this.setState({\n        score: this.state.score + 1,\n      });\n    }\n\n    if (questions.length - 1 !== this.state.currentQuestionIndex) {\n      this.setState({\n        currentQuestionIndex: this.state.currentQuestionIndex + 1,\n      });\n    }\n\n    this.setState({\n      answeredQuestionCount: this.state.answeredQuestionCount + 1\n    });\n  }\n\n  render() {\n    const currentQuestion = questions[this.state.currentQuestionIndex];\n\n    return (\n      <Container>\n        <Grid columns={2}>\n          <Grid.Row>\n            <Grid.Column>\n              <p>Time: {this.state.time}</p>\n              <p>Score: {this.state.score}</p>\n            </Grid.Column>\n            <Grid.Column>\n              <HighScores />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        \n        \n        <Message header={currentQuestion.question} />\n        {currentQuestion.choices.map(choice => (\n          <Button key={choice} value={choice} onClick={this.handleClick}>{choice}</Button>\n        ))}\n      </Container>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport {\n  Container,\n  Divider,\n  Dropdown,\n  Grid,\n  Header,\n  Image,\n  List,\n  Menu,\n  Segment,\n} from 'semantic-ui-react'\n\nconst FixedMenuLayout = () => (\n  <div>\n    <Menu fixed='top' inverted>\n      <Container>\n        <Menu.Item as='a' header>\n          <Image size='mini' src='/logo.png' style={{ marginRight: '1.5em' }} />\n          Project Name\n        </Menu.Item>\n        <Menu.Item\n                    name='Home Page'\n                    onClick={() => {\n                        this.props.history.push('/homepage');\n                    }}\n                    >\n            Home\n                </Menu.Item>\n\n        <Dropdown item simple text='Dropdown'>\n          <Dropdown.Menu>\n            <Dropdown.Item>Quiz\n            <Menu.Item\n                    name='geoQuiz'\n                    onClick={() => {\n                        this.props.history.push('/quiz');\n                    }}\n                    >\n            Geography Quiz\n                </Menu.Item>\n            </Dropdown.Item>\n            <Dropdown.Item>List Item</Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Header>Header Item</Dropdown.Header>\n            <Dropdown.Item>\n              <i className='dropdown icon' />\n              <span className='text'>Submenu</span>\n              <Dropdown.Menu>\n                <Dropdown.Item>List Item</Dropdown.Item>\n                <Dropdown.Item>List Item</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown.Item>\n            <Dropdown.Item>List Item</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </Container>\n    </Menu>\n\n    <Container text style={{ marginTop: '7em' }}>\n      <Header as='h1'>Semantic UI React Fixed Template</Header>\n      <p>This is a basic fixed menu template using fixed size containers.</p>\n      <p>\n        A text container is used for the main container, which is useful for single column layouts.\n      </p>\n\n      <Image src='/Applepie.jpeg' style={{ marginTop: '2em' }} />\n      <Image src='/Cleveland.jpeg' style={{ marginTop: '2em' }} />\n      <Image src='/Dali1.jpeg' style={{ marginTop: '2em' }} />\n      \n    </Container>\n\n    <Segment inverted vertical style={{ margin: '5em 0em 0em', padding: '5em 0em' }}>\n      <Container textAlign='center'>\n        <Grid divided inverted stackable>\n          <Grid.Column width={3}>\n            <Header inverted as='h4' content='Group 1' />\n            <List link inverted>\n              <List.Item as='a'>Link One</List.Item>\n              <List.Item as='a'>Link Two</List.Item>\n              <List.Item as='a'>Link Three</List.Item>\n              <List.Item as='a'>Link Four</List.Item>\n            </List>\n          </Grid.Column>\n          <Grid.Column width={3}>\n            <Header inverted as='h4' content='Group 2' />\n            <List link inverted>\n              <List.Item as='a'>Link One</List.Item>\n              <List.Item as='a'>Link Two</List.Item>\n              <List.Item as='a'>Link Three</List.Item>\n              <List.Item as='a'>Link Four</List.Item>\n            </List>\n          </Grid.Column>\n          <Grid.Column width={3}>\n            <Header inverted as='h4' content='Group 3' />\n            <List link inverted>\n              <List.Item as='a'>Link One</List.Item>\n              <List.Item as='a'>Link Two</List.Item>\n              <List.Item as='a'>Link Three</List.Item>\n              <List.Item as='a'>Link Four</List.Item>\n            </List>\n          </Grid.Column>\n          <Grid.Column width={7}>\n            <Header inverted as='h4' content='Footer Header' />\n            <p>\n              Extra space for a call to action inside the footer that could help re-engage users.\n            </p>\n          </Grid.Column>\n        </Grid>\n\n        <Divider inverted section />\n        <Image centered size='mini' src='/logo.png' />\n        <List horizontal inverted divided link size='small'>\n          <List.Item as='a' href='#'>\n            Site Map\n          </List.Item>\n          <List.Item as='a' href='#'>\n            Contact Us\n          </List.Item>\n          <List.Item as='a' href='#'>\n            Terms and Conditions\n          </List.Item>\n          <List.Item as='a' href='#'>\n            Privacy Policy\n          </List.Item>\n        </List>\n      </Container>\n    </Segment>\n  </div>\n)\n\nexport default FixedMenuLayout","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Homepage from './Homepage';\nimport Quiz from './Quiz';\nimport HighScore from './HighScore';\nimport ImgPage from './imgpage';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path=\"/images\" component={ImgPage} />\n                    <Route exact path=\"/\" component={Homepage} />\n                    <Route exact path=\"/highscores\" component={HighScore} />\n                    <Route exact path=\"/quiz\" component={Quiz} />\n                </Switch>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}